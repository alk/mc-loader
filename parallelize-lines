#!/usr/bin/python

import os, subprocess, sys, signal

def testament_child_death():
    rv = os.fork()
    if rv == 0:
        os.kill(os.getpid(), signal.SIGSTOP)
        os._exit(0)
    os.waitpid(rv, os.WUNTRACED)

def main():
    try:
        width = int(sys.argv[1])
    except:
        sys.exit("Usage: {0} num_threads cmdline...")

    def spawn(i):
        return subprocess.Popen(sys.argv[2:],
                                stdin=subprocess.PIPE)

    childs = [spawn(i) for i in xrange(width)]

    stdins = [c.stdin for c in childs]

    counter = 0
    for l in sys.stdin:
        stdins[counter].write(l)
        counter = (counter + 1) % width

    for i in xrange(width):
        childs[i].stdin.close()

    max_retcode = 0
    for i in xrange(width):
        retcode = childs[i].wait()
        if retcode > max_retcode:
            max_retcode = retcode

    exit(max_retcode)

main()

